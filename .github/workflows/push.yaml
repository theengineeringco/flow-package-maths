name: Push

# Trigger the workflow on push to the master or develop branch.
# These branches are protected, so will run when a PR is merged
on:
  push:
    branches:
      - master
      - develop

jobs:
  testing:
    name: Testing
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Clone Repo
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Get Full Python Version
        id: full-python-version
        shell: bash
        run: |
          echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v2

      - name: Set up Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/poetry
          key: cache-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}

      - name: Install Dependencies
        timeout-minutes: 10
        run: |
          poetry config cache-dir ~/.cache/poetry
          poetry config http-basic.flow-pypi flow-pypi ${{ secrets.FLOW_PYPI_PASSWORD }}
          poetry run python -m pip install pip --upgrade
          poetry install -vvv

      - name: Run Tests
        timeout-minutes: 5
        shell: bash
        run: |
          poetry run pytest

  release:
    name: Release
    needs: testing
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{secrets.TEC_DEVBOT_ACCESS_TOKEN}}

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v2

      - name: Set Flow PyPi Credentials
        shell: bash
        run: |
          poetry config http-basic.flow-pypi flow-pypi ${{ secrets.FLOW_PYPI_PASSWORD }}

      - name: Release
        uses: cycjimmy/semantic-release-action@v2
        timeout-minutes: 5
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/exec
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{secrets.TEC_DEVBOT_ACCESS_TOKEN}}
