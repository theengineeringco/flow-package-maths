name: Push

# Trigger the workflow on push to the master or develop branch.
# These branches are protected, so will run when a PR is merged
on:
  push:
    branches:
      - master
      - develop

jobs:
  testing:
    name: Testing
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Clone Repo
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Get Full Python Version
        id: full-python-version
        shell: bash
        run: |
          echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7

      - name: Set up Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/poetry
          key: cache-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}

      - name: Check Poetry Lock File
        shell: bash
        run: |
          "$(dirname "$(readlink `which poetry`)")"/python -c \
          "from poetry.factory import Factory; l = Factory().create_poetry('.').locker; exit(0) if l.is_locked() and l.is_fresh() else exit(1)" \
          && echo 'poetry.lock is up to date.' || (echo 'poetry.lock is out of date. Run "poetry lock" to fix.'; exit 1)

      - name: Install Dependencies
        shell: bash
        env:
          POETRY_HTTP_BASIC_TEC_PYPI_USERNAME: tec
          POETRY_HTTP_BASIC_TEC_PYPI_PASSWORD: ${{ secrets.TEC_PYPI_PASSWORD }}
        run: |
          poetry config cache-dir ~/.cache/poetry
          poetry install -vv

      - name: Run Tests
        shell: bash
        run: |
          poetry run pytest

  release:
    name: Release
    needs: testing
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
      - name: Clone Repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.TEC_DEVBOT_ACCESS_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v7

      - name: Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/exec
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.TEC_DEVBOT_ACCESS_TOKEN }}
