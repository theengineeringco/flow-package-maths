name: Pull Request

# Trigger the workflow on pull request to master branch
on:
  pull_request:
    branches:
      - master

jobs:
  Linting:
    runs-on: ubuntu-latest
    timeout-minutes: 6

    steps:
      - name: Clone Repo
        uses: actions/checkout@v2

      - name: Setup Git Credentials
        uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: https://TEC-DevBot:${{secrets.TEC_DEVBOT_ACCESS_TOKEN}}@github.com/

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v2

      - name: Poetry Lock (For Windows Only)
        if: startsWith(runner.os, 'Windows')
        run: poetry lock -v
        env:
          POETRY_VIRTUALENVS_CREATE: false

      - name: Setup Linting
        run: pip install tox

      - name: Run Linting
        run: tox -e lint

  Testing:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.6, 3.7, 3.8]

      fail-fast: false

    runs-on: ${{ matrix.os }}
    timeout-minutes: 6

    steps:
      - name: Clone Repo
        uses: actions/checkout@v2

      - name: Setup Git Credentials
        uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: https://TEC-DevBot:${{secrets.TEC_DEVBOT_ACCESS_TOKEN}}@github.com/

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v2

      - name: Poetry Lock (For Windows Only)
        if: startsWith(runner.os, 'Windows')
        run: poetry lock -v
        env:
          POETRY_VIRTUALENVS_CREATE: false

      - name: Setup Testing
        run: pip install tox tox-gh-actions

      - name: Run Tests
        run: tox
